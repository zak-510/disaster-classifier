name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black ruff mypy
    
    - name: Run linting
      run: |
        ruff check .
        black --check .
        mypy src tests
    
    - name: Run tests
      env:
        TESTING: 1
        CUDA_VISIBLE_DEVICES: ''
        MLFLOW_TRACKING_URI: sqlite:///mlflow.db
      run: |
        pytest -v --cov=src tests/
        coverage report --fail-under=80
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit
    
    - name: Check for vulnerabilities
      run: |
        safety check
        bandit -r src/

  docker:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and test Docker image
      run: |
        docker-compose build
        docker-compose run --rm train pytest tests/
    
    - name: Push to GitHub Container Registry
      if: success()
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker tag xbd-pipeline:latest ghcr.io/${{ github.repository }}/xbd-pipeline:latest
        docker push ghcr.io/${{ github.repository }}/xbd-pipeline:latest 